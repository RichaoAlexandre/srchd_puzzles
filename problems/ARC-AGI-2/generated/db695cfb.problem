Solve the following ARC-AGI-2 problem by analyzing the training examples to identify the transformation rule, then applying it to predict the correct output for the test case(s).

## Problem Format

ARC-AGI problems consist of:

- **Training examples**: 3 input-output grid pairs showing the transformation pattern
- **Test case(s)**: 1-2 input grids where you must predict the output
- **Grids**: 2D matrices with integers 0-9 representing different colors
- **Solution**: The correct output grid for each test case

## Problem Data

Problem: db695cfb

**Training Examples:**

INPUT:
5 5 5 5 5 5 5 5 5 5 5 5
5 5 5 5 5 5 5 5 5 5 5 5
5 5 5 5 5 5 5 5 5 6 5 5
5 1 5 5 5 5 5 5 5 5 5 5
5 5 5 5 5 5 5 5 5 5 5 5
5 5 5 6 5 5 5 5 5 5 5 5
5 5 5 5 5 5 5 5 5 5 5 5
5 5 5 5 5 5 5 5 5 5 5 5
5 5 5 5 5 5 6 5 5 5 5 5
5 5 5 5 5 5 5 1 5 5 5 5
5 5 5 5 5 5 5 5 5 5 5 5
5 5 5 5 5 5 5 5 5 5 5 5
5 5 5 5 5 5 5 5 5 5 5 5
5 5 5 5 6 5 5 5 5 5 5 5
5 5 5 5 5 5 5 5 5 5 5 5
OUTPUT:
5 5 5 5 5 5 5 5 6 5 5 5
5 5 5 5 5 5 5 6 5 5 5 5
5 5 5 5 5 5 6 5 5 6 5 5
5 1 5 5 5 6 5 5 5 5 5 6
5 5 1 5 6 5 5 5 5 5 6 5
5 5 5 6 5 5 5 5 5 6 5 5
5 5 6 5 1 5 5 5 6 5 5 5
5 6 5 5 5 1 5 6 5 5 5 5
6 5 5 5 5 5 6 5 5 5 5 5
5 5 5 5 5 6 5 1 5 5 5 5
5 5 5 5 6 5 5 5 5 5 5 5
5 5 5 6 5 5 5 5 5 5 5 5
5 5 6 5 5 5 5 5 5 5 5 5
5 6 5 5 6 5 5 5 5 5 5 5
6 5 5 5 5 5 5 5 5 5 5 5

INPUT:
8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 1 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 6 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8
8 1 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8
OUTPUT:
8 6 8 8 8 8 8 8 8 8 8
8 8 6 8 8 8 1 8 8 8 8
8 8 8 6 8 1 8 8 8 8 8
8 8 8 8 6 8 8 8 8 8 8
8 8 8 1 8 6 8 8 8 8 8
8 8 1 8 8 8 6 8 8 8 8
8 1 8 8 8 8 8 6 8 8 8
8 8 8 8 8 8 8 8 6 8 8

INPUT:
4 4 4 4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 1 4 4 4 4
4 4 4 4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 6 4 4 4 4
4 1 4 4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4 4 4 4
OUTPUT:
4 4 4 4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 1 4 4 4 4
4 4 4 4 4 4 1 4 4 4 4 4
4 4 4 4 4 1 4 4 4 4 4 4
4 4 4 4 1 4 4 4 4 4 4 4
4 4 4 1 4 4 4 4 4 4 4 4
4 4 1 4 4 4 4 6 4 4 4 4
4 1 4 4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4 4 4 4

INPUT:
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 6 8 8 8 8 8 8 8
8 8 1 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8 8 1 8 8 8
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 6 8 8 8 8 8 8
8 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8 1 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 1 8 8 8 8 8 8 8 8 8 6 8 8
OUTPUT:
8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 8 8 8 8 8 6 8 8 8 8 8 8 8
8 8 1 8 8 8 8 8 8 8 8 8 8 8 8 8
8 8 8 1 8 8 8 8 8 8 8 8 1 8 8 6
8 8 8 8 1 8 8 8 8 8 8 8 8 8 6 8
8 8 8 8 8 1 8 8 8 8 8 8 8 6 8 8
8 8 8 8 8 8 1 8 8 8 8 8 6 8 8 8
8 8 8 8 8 8 8 1 8 8 8 6 8 8 8 8
8 8 8 8 8 8 8 8 1 8 6 8 8 8 8 8
8 8 8 8 8 8 8 8 8 6 8 8 8 8 8 8
8 6 8 8 8 8 8 8 6 8 1 8 8 8 8 8
8 8 8 8 8 8 8 6 8 8 8 1 8 8 8 8
8 8 8 8 8 8 6 8 8 8 8 8 8 8 8 8
8 8 8 8 8 6 8 8 8 8 8 8 8 8 8 8
8 8 8 1 6 8 8 8 8 8 8 8 8 6 8 8

INPUT:
4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4
4 1 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 1 4 4
4 4 4 4 4 4 4 4 4
OUTPUT:
4 4 4 4 4 4 4 4 4
4 4 4 4 4 4 4 4 4
4 1 4 4 4 4 4 4 4
4 4 1 4 4 4 4 4 4
4 4 4 1 4 4 4 4 4
4 4 4 4 1 4 4 4 4
4 4 4 4 4 1 4 4 4
4 4 4 4 4 4 1 4 4
4 4 4 4 4 4 4 4 4

**Test Case(s):**

INPUT:
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 1 3 3 3 3 3 3 3 1 3 3 3
3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 6 3 3 3 3 3 3 3 3 3 1 3 3 3 3 3 3
3 3 1 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 6 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 6 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 6 3 3 3 3 3 3 3 3 3
3 3 6 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 6 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 6 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 1 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
3 3 3 1 3 3 3 3 3 3 3 1 3 3 3 3 3 3 3 3 3
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3

## Solution Requirements

Solutions to the problem must:

- Correctly identify the underlying transformation rule from the training examples
- Apply this rule consistently to generate the test outputs
- Produce outputs that exactly match the expected results (perfect accuracy required)
- Demonstrate clear reasoning about the pattern you discovered

Focus on careful analysis of the visual patterns, spatial relationships, and logical transformations shown in the training examples.
